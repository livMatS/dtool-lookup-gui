name: build-on-macos

on:
  workflow_call:

jobs:
  build:

    runs-on: macos-14
      
    steps:

    - name: checkout
      uses: actions/checkout@v4

    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Get version
      id: get_version
      uses: battila7/get-version-action@v2

    - name: Install system dependencies
      run: |
        brew install \
          python \
          glib \
          gobject-introspection \
          pygobject3 \
          gtk+3 \
          gtksourceview4 \
          adwaita-icon-theme \
          create-dmg \
          gfortran \
          numpy \
          scipy

    - name: Log system package info
      run: |
        echo "### sw_vers ###"
        sw_vers | tee sw_vers.txt
        echo "### uname -a ###"
        uname -a | tee uname_a.txt
        echo "### brew list --versions ###"
        brew list --versions | tee brew_list_versions.txt

    - name: Install pythonic dependencies
      run: |
        python3.13 -m venv --system-site-packages venv
        source venv/bin/activate

        pip install --upgrade pip
        pip install wheel setuptools_scm
        pip install -r pyinstaller/macos/requirements.txt
        pip install pyinstaller pyinstaller-hooks-contrib

    - name: Fix setuptools_scm-generated version
      id: fix_version
      run: |
        source venv/bin/activate
        version=$(SETUPTOOLS_SCM_DEBUG=1 python -m setuptools_scm)  # have version written to file to appear in bundled app as well
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Log python package info
      run: |
        source venv/bin/activate

        echo "### pip freeze --local ###"
        pip freeze --local | tee pip_freeze_local.txt

        echo "### pip freeze ###"
        pip freeze | tee pip_freeze.txt

    - name: Compile gschemas
      run: |
        glib-compile-schemas .
      working-directory: dtool_lookup_gui

    - name: Package executable with pyinstaller
      run: |
        source venv/bin/activate
        pyinstaller -y ./pyinstaller/macos/dtool-lookup-gui-macos.spec 2>&1 | tee pyinstaller.log
        ls -lh dist
        mv dist/dtool-lookup-gui.app dtool-lookup-gui.app

    # macos environment's xargs does not support option -a
    - name: Pack build assets
      run: |
        bash -c "tar -cvf dtool-lookup-gui-macos.tar $(cat pyinstaller/MANIFEST.macos | xargs)"

    - name: Collect release assets
      run: |
        prefix=$(pwd)
        mkdir -p ${prefix}/release
        bash ${prefix}/maintenance/copy_files_into_folders.sh \
             ${prefix}/pyinstaller/MANIFEST.macos-release ${prefix}/release

    - name: List content of release
      run: |
        ls -lhv release/

    # see hditutil issue https://github.com/actions/runner-images/issues/7522
    - name: Create dmg
      shell: bash {0}
      run: |
        max_retries=3
        retry_count=0
        
        hdiutil info
        
        echo "Killing XProtect if running..."
        sudo pkill -9 XProtect >/dev/null || true
        
        echo "Waiting for XProtect to stop..."
        while pgrep XProtect; do sleep 3; done
        
        sleep 10
        
        while (( retry_count < max_retries )); do
          echo "Attempt $(($retry_count + 1)) to create dmg..."
          create-dmg \
            --volname "dtool-lookup-gui" \
            --eula "LICENSE.txt" \
            --volicon "data/icons/dtool_logo.icns" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --icon "dtool-lookup-gui.app" 175 120 \
            --hide-extension "dtool-lookup-gui.app" \
            --app-drop-link 425 120 \
            --hdiutil-verbose \
            "dtool-lookup-gui-${{ steps.fix_version.outputs.version }}-macos.dmg" \
            "release/"
        
          # Check if create-dmg succeeded
          if [[ $? -eq 0 ]]; then
              echo "Disk image created successfully."
              break
          else
              echo "Failed to create dmg. Resource might be busy."
              ((retry_count++))
              echo "Retrying in 10 seconds... (Attempt $retry_count of $max_retries)"
              sleep 10
          fi
        done

        hdiutil info
        
        if (( retry_count == max_retries )); then
            echo "Failed to create dmg after $max_retries attempts."
            exit 1
        fi

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: dtool-lookup-gui-macos
        path: dtool-lookup-gui-macos.tar
        if-no-files-found: error

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: dtool-lookup-gui-macos-release
        path: dtool-lookup-gui-${{ steps.fix_version.outputs.version }}-macos.dmg
        if-no-files-found: error

